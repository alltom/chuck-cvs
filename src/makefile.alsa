
CC=gcc
LEX=flex
YACC=bison
INCLUDES=
FLAGS= -D__LINUX_ALSA__ -O3 -g -c
LIBS= -lasound -lstdc++ -ldl -lm
OBJS= chuck.tab.o chuck.yy.o chuck_main.o chuck_errormsg.o chuck_utils.o \
	chuck_symbol.o chuck_table.o chuck_temp.o chuck_absyn.o chuck_type.o \
	chuck_emit.o chuck_frame.o chuck_instr.o chuck_vm.o chuck_ugen.o \
	chuck_bbq.o chuck_socket.o chuck_dl.o digitalio_rtaudio.o rtaudio.o \
	midiio_alsa.o ugen_osc.o ugen_xxx.o ugen_filter.o ugen_stk.o \
	ulib_machine.o ulib_math.o ulib_std.o util_buffers.o util_sndfile.o

chuck: $(OBJS)
	$(CC) -o chuck $(OBJS) $(LIBS)

chuck_main.o: chuck_main.cpp chuck_errormsg.h chuck_utils.h
	$(CC) $(FLAGS) chuck_main.cpp

chuck_emit.o: chuck_emit.cpp chuck_emit.h
	$(CC) $(FLAGS) chuck_emit.cpp

chuck_ugen.o: chuck_ugen.cpp chuck_ugen.h
	$(CC) $(FLAGS) chuck_ugen.cpp

chuck_osc.o: chuck_osc.cpp chuck_osc.h chuck_ugen.h
	$(CC) $(FLAGS) chuck_osc.cpp

chuck_temp.o: chuck_temp.h chuck_temp.c
	$(CC) $(FLAGS) chuck_temp.c

chuck_frame.o: chuck_frame.h chuck_frame.cpp
	$(CC) $(FLAGS) chuck_frame.cpp

chuck_vm.o: chuck_vm.h chuck_vm.cpp
	$(CC) $(FLAGS) chuck_vm.cpp

chuck_instr.o: chuck_instr.h chuck_instr.cpp
	$(CC) $(FLAGS) chuck_instr.cpp

chuck_type.o: chuck_type.cpp chuck_type.h
	$(CC) $(FLAGS) chuck_type.cpp

chuck_absyn.o: chuck_absyn.c chuck_absyn.h chuck_utils.h
	$(CC) $(FLAGS) chuck_absyn.c

chuck_symbol.o: chuck_symbol.c chuck_symbol.h
	$(CC) $(FLAGS) chuck_symbol.c

chuck_table.o: chuck_table.c chuck_table.h
	$(CC) $(FLAGS) chuck_table.c

chuck.tab.o: chuck.tab.c
	$(CC) $(FLAGS) chuck.tab.c

chuck.tab.c: chuck.y
	$(YACC) -dv -b chuck chuck.y

chuck.tab.h: chuck.tab.c
	echo "chuck.tab.h was created at the same time as chuck.tab.c"

chuck_errormsg.o: chuck_errormsg.c chuck_errormsg.h chuck_utils.h
	$(CC) $(FLAGS) chuck_errormsg.c

chuck.yy.o: chuck.yy.c chuck.tab.h chuck_errormsg.h chuck_utils.h
	$(CC) $(FLAGS) chuck.yy.c

chuck.yy.c: chuck.lex
	$(LEX) -ochuck.yy.c chuck.lex

chuck_utils.o: chuck_utils.c chuck_utils.h
	$(CC) $(FLAGS) chuck_utils.c

chuck_bbq.o: chuck_bbq.cpp chuck_bbq.h midiio_alsa.h digitalio_alsa.h
	$(CC) $(FLAGS) chuck_bbq.cpp

chuck_filter.o: chuck_filter.cpp chuck_filter.h chuck_ugen.h
	$(CC) $(FLAGS) chuck_filter.cpp

chuck_socket.o: chuck_socket.h chuck_socket.c
	$(CC) $(FLAGS) chuck_socket.c

digitalio_alsa.o: digitalio_alsa.cpp digitalio_alsa.h
	$(CC) $(FLAGS) digitalio_alsa.cpp

digitalio_rtaudio.o: digitalio_rtaudio.h digitalio_rtaudio.cpp
	$(CC) $(FLAGS) digitalio_rtaudio.cpp

rtaudio.o: rtaudio.h rtaudio.cpp rterror.h
	$(CC) $(FLAGS) rtaudio.cpp

midiio_alsa.o: midiio_alsa.cpp midiio_alsa.h
	$(CC) $(FLAGS) midiio_alsa.cpp

chuck_dl.o: chuck_dl.h chuck_dl.cpp
	$(CC) $(FLAGS) chuck_dl.cpp

ugen_osc.o: ugen_osc.h ugen_osc.cpp
	$(CC) $(FLAGS) ugen_osc.cpp

ugen_xxx.o: ugen_xxx.h ugen_xxx.cpp
	$(CC) $(FLAGS) ugen_xxx.cpp

ugen_filter.o: ugen_filter.h ugen_filter.cpp
	$(CC) $(FLAGS) ugen_filter.cpp

ugen_stk.o: ugen_stk.h ugen_stk.cpp
	$(CC) $(FLAGS) ugen_stk.cpp

ulib_machine.o: ulib_machine.h ulib_machine.cpp
	$(CC) $(FLAGS) ulib_machine.cpp

ulib_math.o: ulib_math.h ulib_math.cpp
	$(CC) $(FLAGS) ulib_math.cpp

ulib_std.o: ulib_std.h ulib_std.cpp
	$(CC) $(FLAGS) ulib_std.cpp

util_buffers.o: util_buffers.h util_buffers.cpp
	$(CC) $(FLAGS) util_buffers.cpp

util_sndfile.o: util_sndfile.h util_sndfile.c
	$(CC) $(FLAGS) util_sndfile.c

clean: 
	rm -f chuck *~ *.o chuck.output chuck.tab.h chuck.tab.c chuck.yy.c
