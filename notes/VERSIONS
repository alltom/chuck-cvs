---
1.2.0.5
  - (added) Keyboard Input
  - (added) - KBHit event class (see examples/event/kb*.ck)
  - (added) FM.controlChange( int, float ) affects FM subclasses:
    BeeThree, FMVoices, HevyMetl, PercFlut, Rhodey, TubeBell, Wurley
  - (added) Shakers.controlChange( int, float )
  - (fixed) impulse.last() no longer has extra samp delay
            (thanks to Mike McGonagle for reporting)
  - (fixed) class inheritance now handles the first overloaded
            function of a parent correctly when called using a
            subclass instance.  in other words, this part sucks
            less now.
            (thanks to Mike McGonagle for reporting)
  - (fixed) (internal) type checker re-instantiation patched
  - (fixed) (internal) detach_all() moved to chuck_globals.cpp
  - (fixed) (internal) global variables moved to chuck_globals.cpp


---
1.2.0.4
  - (added) The ChucK Manual (pdf)
            fantastic work by Adam Tindale and other documentors
            see doc/Chuck_manual.pdf
  - (added) Envelope.duration( dur ), Envelope.duration()
  - (added) Envelope.keyOn(), Envelope.keyOff();
  - (added) PitShift.mix( float ), PitShift.mix()
            (originally effectMix)
  - (added) std.srand( int ) : seed random number generator
  - (added) update to RtAudio 3.2.0 -> much lower latency: Window DS
            (thanks to Gary Scavone and Robin Davies)
  - (added) update to RtMidi 1.0.4 -> improved midi: linux ALSA
            (thanks to Gary Scavone and Pedro Lopez-Cabanillas)
  - (added) bandlimited ugens: Blit, BlitSaw, BlitSquare
            (thanks to Robin Davies for implementation,
             Gary Scavone for putting them in STK)
  - (added) examples/basic/foo.ck foo2.ck tick.ck tick2.ck
            (foo2 shows using Blit, tick.ck is a simple counter)
  - (added) examples/class/dinky.ck try.ck
            (creating and using class to make instruments)
  - (fixed) sndbuf.read now closes file handle and sets curf
  - (fixed) default bufsize=256 under OSX and 512 under all other
  - (fixed) chuck + foof garbled error message
  - (fixed) chuck.lex compatibility under some linux
  - (fixed) waiting on null event: no longer crashes VM
  - (fixed) function arguments: no longer allow reference to primitive types
  - (fixed) function: correctly select overloaded functions w/ implicit cast
  - (fixed) std.atoi() std.atof(): no longer crash on null string
  - (fixed) std.fabs(): now works correctly
  - (fixed) basic/moe.ck larry.ck currly.ck use fabs
  - (fixed) missing base class virtual destructors;
            FreeBSD/g++ compatibility (thanks rasmus)
  - (fixed) most -Wall warnings
  - (fixed) CK_LOG_SYSTEM_ERROR now CK_LOG_CORE


---
1.2.0.3
  (API changes again)
  (syntax change - 'loop' -> 'repeat')
  - loop( ... ) construct (see 1.2.0.2) changed to repeat( ... )
    - usage and semantics same as before
    - this is also an experimental language feature
      (let us know if it's good or bad)
  - float std.abs( float ) changed -> int std.abs( int )
  - use std.fabs( ... ) for floating point absolute value

  - (added) /* block comments */
    - no nesting allowed
    - closing '*/' not necessary if commenting out rest of the file
  - (fixed) arrays of null object references correctly allocated
      : Event @ events[128];
  - (fixed) DEFAULT sndbuf rate now set correctly to interpolate
      for files outside of chuck sample rate (no longer have to
      explicit do 1 => buf.rate)
  - (fixed) examples/midi/polyfony*.ck no longer creates 128
      unnecessary events...
  - (changed) examples/stk/wurley.ck -> examples/stk/wurley2.ck
  - (changed) examples/stk/wurley.ck (wacky version)


---
1.2.0.2 - 2005.10.17
  (sorry for the API changes)
  - (API change) OSC_Send class name changed to 'OscSend'
      (also): .startMesg(...) name changed to startMsg(...)
  - (API change) OSC_Recv class name changed to 'OscRecv'
  - (API change) OSC_Addr class name changed to 'OscEvent'
      (also): .hasMesg() name changed to .hasMsg()
      (also): .nextMesg() name changed to .nextMsg()
  - (API change) STK Shakers.freq now expect Hz instead of MIDI number

  - (moved) examples/event/opensound*.ck moved to examples/osc/OSC*.ck
      (see OSC_send.ck and OSC_recv.ck for examples on OpenSoundControl)
  - (moved) examples/event/polyfony*.ck to examples/midi/

  - (added) 'loop(...){ }' control structure : 
      example: loop( 8 ) { ... } // executes body 8 times
      example: loop( foo ) { ... } // executes body foo times
      (foo is evaluated exactly once entering the loop, the
      value at that time is used as a constant to control
      loop iteration - even if foo is changed in the loop
      body.)
      - supports break and continue
      - important: one fundamantal difference between the loop 
        semantic and for/while/until semantic is that the argument
        expression 'exp' in loop( exp ) is evaluated exactly once
        when the loop is first entered.
  - (added) MidiIn and MidiOut member functions:
      .good() : whether the thing is good to go (int)
      .num()  : the device number (int)
      .name() : the device name (string)
      .printerr( int ) : whether to auto print errors (default YES)
  - (added) --version command line flag (Graham)

  - (changed) chuck --status now prints shreds sorted by id
      (previously it was the current shreduling order + blocked)
  - (changed) a udp port may now be shared by many OSC_Recv (phil)
      : the incoming messages are broadcast to all
  - (changed) address/type string in OSC: comma now optional (phil)

  - (fixed) events are now 0-sample synchronous (instead of 1)
  - (fixed) startup audio stability for --callback mode
  - (fixed) incorrect 'continue' behavior in for loops
  - (fixed) improved OSC stability (phil)
  - (fixed) OSC shreduling sanity check failed now resolved
  - (fixed) math.round for negative numbers (win32)
  - (fixed) std.mtof and std.ftom now internally double precision 
  - (fixed) removed extra console output in STK Flute
  - (fixed) multiple delete/assertion failure on type rollback
  - (fixed) chuck --kill now closes WvOut and MidiRW file handles
  - (added) examples/midi/gomidi.ck : very useful sometimes
  - (added) examples/midi/gomidi2.ck
  - (added) examples/basic/rec-auto.ck (rec2.ck back in action)
  - (added) examples/basic/fmsynth.ck (from v1)
  - (added) examples/sitar.ck
  - (fixed) examples/stk/*-o-matic.ck now uses array


---
1.2.0.1 - 2005.9.27
  - (added) full callback capability for real-time audio
    - blocking functionality still available
    - select via flags: --blocking and --callback
    - improves latency and stability, especially on linux
    - use --callback (default) for low latency / small buffer size
    - use --blocking for higher throughput
  - (fixed) crash when doing on-the-fly 'replace' : chuck --replace 0 foo.ck
  - (fixed) OSC event function now correctly named ("event")
  - (fixed) removed debug output in OSC
  - (fixed) implicit cast is now correct when sporking (thanks to Manfred Brockhaus)
  - (fixed) examples code reformatted, cleaned, and commented
  - (fixed) nested class definitions can now have same name as outer class
  - (fixed) nested class bug in scan1 (thanks to Robin Davies)
  - (fixed) variable resolution in parent class now visible (thanks to Robin Davies)
  - (fixed) variable resolution ordering
    - local, class, parent, global (thanks to Robin Davies)
  - (fixed) emitter now asserts inheritance instead of equality (thanks to Robin Davies)
  - (fixed) string comparison ==, !=
  - (added) string operations <, <=, >, >=


---
1.2.0.0

  SYNTAX and OPERATORS:
  - (added) +=>, operator : 2 +=> i; (also) -=>, *=>, /=>, %=>
  - (added) @=> for explicit assignment
    this is the only way to make object reference assignments
  - (added) implicit int to float casting
  - (changed) cast now look like: 1.1 $ (int) => int i;
  - (added) function call by chucking : 
    // call
    (1,4) => math.rand2f => result;
    // same as
    math.rand2f(1,4) => result;

  LANGUAGE:
  - (fixed) type system for existing types
  - (added) forward lookup of classes and functions (mutual recursion)
  - (added) stack overflow detection for massive recursion

  DOCUMENTATION:
  - (added) language specification:
        http://chuck.cs.princeton.edu/doc/language

  COMMAND-LINE:
  - (added) --probe prints all audio and MIDI devices
  - (added) --log or --verbose logs compiler and virtual machine
  - (added) --logN or --verboseN multi level logging
    1 - least verbose
    10 - most verbose

  OBJECTS:
  - (added) 'class' definitions : class X { int i; }
  - (added) 'extends' keyword : class Y extends Event { int i; }
  - (added) virtual/polymorphic inheritance
  - (added) added pre-constructors - code at class level
    gets run when object is instantiated
  - (added) function overloading :
    class X { fun void foo() { }  fun void foo( int y ) { } }
  - (added) base classes (can be extended):
    Object, Event, UGen
    see below
  - (added) base classes (cannot be extended):
    array, string
    see below
  - (added) member data
  - (added) static data
  - (added) member functions
  - (added) static functions

  EVENTS:
  - (added) base Event class : Event e;
    can be used directly
    can be extended to custom events
    (see one_event_many_shreds.ck)
  - (added) waiting on event, chuck to now : 
    e => now; // wait on e
  - (added) e.signal() wakes up 1 shred, if any
  - (added) e.broadcast() wakes up all shreds waiting on e
  - (added) class MidiEvent (see gomidi2.ck)
    alternative to polling.
  - (added) class OSCEvent

  ARRAYS:
  - (added) arrays : int a[10]; float b[20]; Event e[2];
  - (added) multidimensional arrays : int a[2][2][2];
  - (added) associative arrays : int a[10]; 0 => a["foo"];
    all arrays are both int-indexed and associative
  - (added) array initialization : [ 1, 2, 3 ] @=> int a[];
  - (added) .cap() for array capacity
  - (added) .find() test if item is associative array
  - (added) .erase() erase item in associative array

  UGENS:
  - (added) class UGen
    can be extended
  - (changed) all ugen parameters are now also functions:
    // set freq
    440 => s.freq => val;
    // same as...
    s.freq( 440 ) => val;
  - (changed) left-most parameters must now be called as functions
    // no longer valid
    f.freq => float val;
    // valid
    f.freq() => float val;
    // still ok
    440 => s.freq => float val;

  SHREDS:
  - (added) class Shred
  - (added) .yield() .id()

  STRINGS:
  - (added) class string

  AUDIO:
  - (added) stereo
    all stereo unit generators have .left, .right, .pan functions
  - (changed) stereo ugen: dac (2 in, 2 out)
  - (changed) stereo ugen: adc (0 in, 2 out)
  - (added) stereo ugen: pan2 take mono or stereo input and pans
  - (added) stereo ugen: mix2 mix stereo input into mono


---
1.1.5.6 - 2005.4.11
  - last 1.1 release : contains all 1.1 changes


---
1.1.5.5 - 2005.2.10
  - FIFO to RR for audio and synthesis - improves stability on OS X
  - fixed stack underflow emitter bug with declarations
  - fixed cpu sleep bug on win32


---
1.1.5.4 - 2004.11.18
  - fixed clicks when using adc unit generator
    (thanks to paul botelho for testing)
  - added 'maybe' keyword
    maybe == 0 or 1, with 50% probability each

new examples:
  - maybe.ck : the maybe keyword - bad idea? maybe.
  - maybecli.ck : maybe click, maybe not

adc examples work better:
  - adc.ck
  - echo.ck
  - i-robot.ck


---
1.1.5.3 - 2004.11.4
  - when a shred is removed from VM, all children shreds are 
    also recursively removed
    (this fix crash due to removing shreds with active children shreds)
    (to keep children around, put parent in infinite time-loop)
    (this isn't always good - real solution coming soon)
  - 'start' keyword now available - holds the a shred's begin time

updated examples:
  - powerup.ck : start local variable changed name
  - spork.ck : added infinite time loop to keep children active


---
1.1.5.2 - 2004.10.17
  - crtical patch shreduler time precision
  - same as 1.1.5.1 - see below


---
1.1.5.1 - 2004.10.15
  - on-the-fly chuck files to remote hosts!
    > chuck @hostname + foo.ck
    > chuck @hostname -p<N> + foo.ck
  - TCP replacing UDP for commands
  - endian observed (mac <-> win32/linux)
  - more sensible VM output for on-the-fly commands
  - many on-the-fly bug fixes
  - --replace: new shred inherits the replaced shred id
    (useful to keep track of shreds in VM)
  - sndbuf automatically set .rate to 1.0 (instead of 0.0)
    (0.0 => buf.rate if no play on next time advance)
  - new on-the-fly examples

new examples:

  - otf_*.ck - illustrates precise on-the-fly timing
    (adapted from Perry's ChucK drumming + Ge's sine poops)

    chuck them one by one into the VM:

      terminal 1%> chuck --loop
      terminal 2%> chuck + otf_01.ck
      (wait)
      terminal 2%> chuck + otf_02.ck
      (wait)
      (repeat through otf_07.ck)
      (remove, replace and add your own)


---
1.1.5.0 - 2004.9.29
  - now able to write audio files (wav, aiff, raw)
    (try rec.ck and rec2.ck concurrently with any other shreds
     to record to disk)
  - STK file endian is now observed (more things should work
    on little endian systems)
  - added 4 "special" built-in sound samples
    "special:glot_pop" - glottal pulse (flat)
    "special:glot_ahh" - glottal 'ahh' pop
    "special:glot_eee" - glottal 'eee' pop
    "special:glot_ooo" - glottal 'ooo' pop
    (see/listen to moe++.ck, larry++.ck, curly++.ck)
  - all bulit-in sound samples now loadable from both WaveLoop and sndbuf
  - (win32) sndbuf now properly loads wav aiff

new examples:
  - moe++.ck - stooges, evolved
  - larry++.ck
  - curly++.ck
  - rec.ck - run this concurrently to write audio to file
    (also try with -s flag for file out, no real-time audio)
  - rec2.ck - same as rec, but writes to different file every time,
    for sessions


---
1.1.4.9 - 2004.9.18
  - all of STK is now in ChucK!
  - new examples (see below)
  - add '--bufnum<N>' to chuck command line (number of buffers)
  - --status no longer prints full path for source
  - full path now works for command line + (thanks Adam T.)
  - minor bug fixes
  - improved online ugen documentation (go phil!)

new ugens: (again, thanks to Phil Davidson!)
  BandedWG (STK)
  Blowhole (STK)
  BlowBotl (STK)
  Bowed (STK)
  Brass (STK)
  Clarinet (STK)
  Flute (STK)
  ModalBar (STK)
  Saxofony (STK)
  Sitar (STK)
  StifKarp (STK)
  delayp - variable write position delay line

new examples:
  band-o-matic.ck - banded waveguide, automated
  delayp.ck - shows usage
  mode-o-matic.ck - modal bar, happy chaos
  stifkarp.ck - stifkarp, chaos


---
1.1.4.8 - 2004.9.8
  - added win32 visual studio support (chuck_win32.*)
  - new oscillators (see below, thanks to Phil)
  - corrected more issues on some 64-bit systems
  - new examples (see below)
  - chucking to oscillators now able to control phase
    (alternative to doing FM by hand (1::samp at a time),
     see pwm.ck and sixty.ck) (thanks to Phil)

new ugens:
  triosc - triangle wave
  pulseosc - pulse wave oscillator w/ controllable pulse width
  sqrosc - square wave
  sawosc - saw tooth
  phasor - 0 to 1 ramp

new examples:
  sixty.ck - shows osc's
  pwm.ck - basic pulse width modulation
  (you can still do FM "by hand" - see fmsynth.ck)


---
1.1.4.7 - 2004.9.4
  - improved performance (reduce cpu overhead)
  - fixed bug that caused crash on ctrl-c
  - added sndbuf.play (same as rate)
  - corrected issues on some 64-bit systems
  - sndbuf.ck now works

---
1.1.4.6 - 2004.8.26
  - added netin/netout unit generators (alpha version)
  - added a lot of STK unit generators (thanks to philipd)
    (over 80% of STK is now imported)
  - fixed Shakers (thanks to philipd) : examples/shake-o-matic.ck
  - better compilation for cygwin
  - minor bugs fixes
  - added many READ functionality for ugen parameters
       see online documentation at:
       http://chuck.cs.princeton.edu/doc/program/ugen.html

new ugens:
  - netout (alpha version) - audio over UDP (see net_send.ck)
  - netin (alpha version) - audio over UDP (see net_recv.ck)
  - Chorus (STK)
  - Envelope (STK)
  - NRev (STK)
  - PRCRev (STK)
  - Modulate (STK)
  - PitShift (STK)
  - SubNoise (STK)
  - WvIn (STK)
  - WvOut (STK)
  - BlowBotl (STK)
  - FM group (STK)
    - BeeThree
    - FMVoices
    - HevyMetl
    - PercFlut
    - TubeBell

new examples:
  - shake-o-matic.ck - STK shakers going bonkers
  - net_send.ck - oneway sender
  - net_recv.ck - oneway recv
  - net_bounce.ck - redirect


---
1.1.4.5 - 2004.8.14
  - fixed bug for multiple declarations
  - made functions local to shred by default
  - shadowing now works
  - add 'blackhole' ugen for ticking ugens
  - added std.mtof (philipd)
  - added std.ftom
  - added std.dbtorms
  - added std.rmstodb
  - added std.dbtopow
  - added std.powtodb

new ugens:
  - blackhole - the silent sample sucker
  - Wurley (STK)
  - Rhodey (STK)
  - OnePole (STK)
  - OneZero (STK)
  - PoleZero (STK)
  - TwoPole (STK)
  - TwoZero (STK)

new examples:
  - powerup.ck ( (ab)use of TwoPole and sporking)
  - i-robot (building feedback filters)
  - voic-o-form.ck (music for replicants)
  - rhodey/wurley.ck (more stk-o-matics)

---
1.1.4.4 - 2004.8.2
  - added sndfile patch for jack/sndfile (Martin Rumori)
  - added special raw wav for WaveLoop (philipd, gewang)

    (see examples/dope.ck)
      "special:ahh"
      "special:eee"
      "special:ooo"
      "special:britestk"
      "special:dope"
      "special:fwavblnk"
      "special:halfwave"
      "speical:impuls10"
      "special:impuls20"
      "special:impuls40"
      "special:mand1"
      "special:mandpluk"
      "special:marmstk1"
      "special:peksblnk"
      "special:ppksblnk"
      "special:slience"
      "speical:sineblnk"
      "special:sinewave"
      "special:snglpeak"
      "special:twopeaks"

  - fixed shred shreduling ID bug for on-the-fly added shreds (gewang)
  - fixed function resolution for on-the-fly added shreds (gewang)
  - added math.nextpow2( int n ) (Niklas Werner, gewang)

new STK ugens:
  - Mandolin (see examples/mandolin.ck examples/mand-o-matic.ck)
  - Moog (see examples/moogie.ck)

new examples:
  - mandolin.ck (use of STK mandolin)
  - mand-o-matic (fire it up!)
  - dope.ck (Homer's WaveLoop using internal STK sound)
  - print_last.ck (prints last ugen output)
  - wind2.ck (2 shreds control parameters)


---
1.1.4.3 - 2004.7.4
  - add sndfile support (Ari Lazier)
  - add sndbuf file reading/writing (Ari Lazier)
  - add sinosc.sfreq and phase (Phil Davidson)
  - add sndbuf rate and sinc interp (Phil Davidson)
  - add cget functions for unit generators parameters
    (many parameters are readable now)
  - add .last for last sample computed for all ugen's
  - add constants in lib import
  - add math.pi math.twopi math.e
  - add --srate(N) in command line (chuck --help)
  - typing .ck extension optional on command line
  - fixed spork bug involved local variables
  - fixed nested function calls
  - fixed math.min/max bug (Phil Davidson)
  - fixed audio stability OS X (Ari Lazier)
  - fixed MidiOut issue (thanks to n++k)

new Unit Generators
(from STK)
  ADSR (updated)
  BiQuad
  Delay
  DelayA
  DelayL
  Echo
  WaveLoop (updated)


---
1.1.4.2 - 2004.6.14
  - added support for arbitrary audio in/out (via command line)


---
1.1.4.1 - 2004.6.13
  - double lt gt fix
  - added demo[0-5].ck to examples
  - PROGRAMMER updated
  - big/little endian issue fixed


---
1.1.4.0 - 2004.6.12
  - major update to use double float for time, dur, and float
    (this fixes the millisecond bug)


---
1.1.3.6 - 2004.6.9
  - fixed win32 build problem (thanks to Adam Wendt)
  - fixed midi stack problem (thanks to Thomas Charbonnel)


---
1.1.3.5 - 2004.6.8
  - fixed mem stack bug (report Alex Chapman)
  - added jack support (thanks to Thomas Charbonnel)


---
1.1.3.4 - 2004.6.7
  - fixed spork bug
  - bad midiin now returns 0
  - supports sound card with no input
  - add spork.ck


---
1.1.3.3 - 2004.6.7
  - added ability to spork shreds from code
  - casting float/int
  - 0-127 MIDI devices support
  - fix bugs in on-the-fly commands
  - added features to --add, --remove
  - added --time --kill
  - fixed table bug (thanks to n++k)
  - fixed linux makefile (thanks to n++k)
  - added STK ugen: WaveLoop, Shakers, JCRev, ADSR
  - added shred-time synch by T - (now % T ) => now;


---
1.1.3.2


---
1.1.3.1


---
1.1.3.0 - initial release
